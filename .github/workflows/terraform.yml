name: Terraform
on:
  workflow_dispatch:
    inputs:
      action:
        description: Select the Terraform action
        required: true
        default: plan
        type: choice
        options: [plan, apply, destroy]

jobs:
  tf:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Write SA key file
        env:
          SA_JSON_B64: ${{ secrets.YC_SA_JSON_B64 }}
        run: python3 -c "import base64,os; open('sa-key.json','wb').write(base64.b64decode(os.environ['SA_JSON_B64']))"

      - name: Validate SA key JSON
        run: python3 -c 'import json; json.load(open("sa-key.json"))'

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
        run: >
          terraform init -input=false
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}"
          -backend-config="key=tf-state.tfstate"
          -backend-config="endpoint=https://storage.yandexcloud.net"
          -backend-config="region=ru-central1"
          -backend-config="use_path_style=true"
          -backend-config="skip_region_validation=true"
          -backend-config="skip_credentials_validation=true"
          -backend-config="skip_requesting_account_id=true"
          -backend-config="skip_s3_checksum=true"

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_vm_ssh_user: ${{ secrets.SSH_USER }}
          TF_VAR_vm_ssh_pubkey: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_sa_key_file: sa-key.json
        run: terraform plan -input=false

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_vm_ssh_user: ${{ secrets.SSH_USER }}
          TF_VAR_vm_ssh_pubkey: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_sa_key_file: sa-key.json
        run: terraform apply -auto-approve -input=false

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_vm_ssh_user: ${{ secrets.SSH_USER }}
          TF_VAR_vm_ssh_pubkey: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_sa_key_file: sa-key.json
        run: terraform destroy -auto-approve -input=false
